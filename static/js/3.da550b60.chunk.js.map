{"version":3,"sources":["assets/images/clear-dark.svg","assets/images/add-dark.svg","../node_modules/js-file-download/file-download.js","assets/images/download.svg","assets/images/delete-all.svg","components/Settings/Categories/Category/Category.tsx","components/Settings/Categories/Categories.tsx","components/Settings/DataLoad/DataLoad.tsx","components/Settings/DeleteData/DataDelete.tsx","components/Settings/Settings.tsx"],"names":["module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","Category","props","key","name","className","onClick","onShowConfirmWindow","setCategoryId","id","src","clear","alt","Categories","useState","newCategory","setNewCategory","error","setError","showConfirm","setShowConfirm","categoryId","useEffect","getCategoriesThunkCreator","isAuth","onKeyPress","e","replace","addCategoriesThunkCreator","Date","now","placeholder","autoFocus","value","onBlur","onChange","currentTarget","addDark","Confirm","title","func","deleteCategoryThunkCreator","close","categories","map","item","DataLoad","expenses","category","spent","date","toString","split","join","Button","image","fileDownload","React","memo","dataToBeDeleted","deleteExpensesThunkCreator","deleteAll","connect","store","categoriesSelector","isAuthSelector","isLoading","isLoadingSelector","expensesSelector","getUser","getAllExpensesThunkCreator","Loader","to"],"mappings":"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","file":"static/js/3.da550b60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-dark.4def21f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-dark.24833611.svg\";","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/download.21e28e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-all.4007b9b3.svg\";","import React from \"react\";\r\nimport './category.scss'\r\nimport clear from \"../../../../assets/images/clear-dark.svg\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    id: number,\r\n\r\n    onShowConfirmWindow(): void,\r\n\r\n    setCategoryId(id: number): any,\r\n}\r\n\r\nconst Category: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div key={props.name} className={'category'}>\r\n                <p>{props.name}</p>\r\n                <button className={'button'} onClick={() => {\r\n                    props.onShowConfirmWindow();\r\n                    props.setCategoryId(props.id);\r\n                }}>\r\n                    <img src={clear} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Category;","import React, {useEffect, useState} from \"react\";\r\nimport Category from \"./Category/Category\";\r\nimport addDark from \"../../../assets/images/add-dark.svg\";\r\nimport './categories.scss';\r\nimport Confirm from \"../../Confirm/Confirm\";\r\nimport {CategoryType} from \"../../../redux/settings-reducer\";\r\n\r\ninterface Props {\r\n    categories: Array<CategoryType>,\r\n    isAuth: boolean,\r\n\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    addCategoriesThunkCreator(name: string, id: number): void,\r\n\r\n    deleteCategoryThunkCreator(id: number): void,\r\n}\r\n\r\nconst Categories: React.FC<Props> = (props) => {\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n    const [categoryId, setCategoryId] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesThunkCreator();\r\n    }, [props.isAuth]);\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesThunkCreator();\r\n    }, []);\r\n\r\n    const onKeyAdd = (e: any) => {\r\n        if (e.key === 'Enter' && newCategory && newCategory.replace(/\\s+/g, '')) {\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            setNewCategory('');\r\n        } else {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const onAddCategory = () => {\r\n        if (!newCategory || !newCategory.replace(/\\s+/g, '')) {\r\n            setError(true);\r\n        } else {\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            setNewCategory('');\r\n        }\r\n    };\r\n\r\n    const onCategoryTyping = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewCategory(e.currentTarget.value);\r\n        if (error) {\r\n            setError(false);\r\n        }\r\n    };\r\n\r\n    const onDeleteCategory = (id: number) => {\r\n        props.deleteCategoryThunkCreator(id);\r\n    };\r\n\r\n    const onCloseConfirmWindow = () => {\r\n        setShowConfirm(false);\r\n    };\r\n    const onShowConfirmWindow = () => {\r\n        setShowConfirm(true)\r\n    };\r\n\r\n    return (\r\n        <div className={'settings__item categories'}>\r\n            <h3>Categories</h3>\r\n            <div className={'categories__form'}>\r\n                <input onKeyPress={onKeyAdd} placeholder={'Products, Bills, etc.'} autoFocus={true} className={error ? 'category-name category-name--error' : 'category-name'} type=\"text\"\r\n                       value={newCategory} onBlur={() => setError(false)} onChange={onCategoryTyping}/>\r\n                <button className={'button'} onClick={onAddCategory}>\r\n                    <img src={addDark} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n\r\n            <Confirm className={showConfirm ? 'confirm show' : 'confirm'} title={'This category will be deleted. Are you sure?'}\r\n                     func={() => onDeleteCategory(+categoryId)}\r\n                     close={onCloseConfirmWindow}/>\r\n\r\n            <div className={'categories__items'}>\r\n                {props.categories.map((item: CategoryType) => <Category key={item.id} name={item.name} id={item.id}\r\n                                                               setCategoryId={setCategoryId} onShowConfirmWindow={onShowConfirmWindow}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Categories;","import React from \"react\";\r\nimport fileDownload from 'js-file-download';\r\nimport {Expenses} from \"../../Analytics/Analytics\";\r\nimport './data-load.scss';\r\nimport Button from \"../../Button/Button\";\r\nimport download from './../../../assets/images/download.svg';\r\n\r\nconst DataLoad = (props: any) => {\r\n    let data = 'Name,Category,Spent,Date\\n' + [...props.expenses].map((item: Expenses) => `${item.name},${item.category},${item.spent},${item.date.toString().split(', ').join(' - ')}`).join('\\n');\r\n\r\n    return (\r\n        <div className={'settings__item data-loader'}>\r\n            <h3>Download Data</h3>\r\n            <div className={'data-loader__items'}>\r\n                <p className={'settings-info'}>You can download your personal expenses in .CSV file and process your data within Excel.</p>\r\n                <Button image={download} className={'button button--settings'} func={() => fileDownload(data, 'expenses.csv')} title={'Download'}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DataLoad;","import React, {useState} from \"react\";\r\nimport './data-delete.scss';\r\nimport Button from \"../../Button/Button\";\r\nimport {Expenses} from \"../../Analytics/Analytics\";\r\nimport Confirm from \"../../Confirm/Confirm\";\r\nimport deleteAll from \"../../../assets/images/delete-all.svg\";\r\n\r\ntype Props = {\r\n    expenses: Array<Expenses>\r\n    deleteExpensesThunkCreator(data: Array<number>): void,\r\n}\r\n\r\nconst DataDelete: React.FC<Props> = (props) => {\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n    const dataToBeDeleted = [...props.expenses].map((item: Expenses) => item.id);\r\n\r\n    const onDeleteAllExpenses = () => {\r\n        props.deleteExpensesThunkCreator(dataToBeDeleted);\r\n    };\r\n\r\n    return (\r\n        <div className={'settings__item data-delete'}>\r\n            <h3>Delete Data</h3>\r\n\r\n            <Confirm title={'All your expenses will be deleted irrevocably. Are you sure?'} className={showConfirm ? 'confirm show': 'confirm'}\r\n                     func={onDeleteAllExpenses} close={() => setShowConfirm(false)}/>\r\n\r\n            <div className={'data-loader__items'}>\r\n                <p className={'settings-info'}>All your data can be deleted.</p>\r\n                <Button image={deleteAll} className={'button button--settings delete'} func={() => setShowConfirm(true)} title={'Delete'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default React.memo(DataDelete);","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addCategoriesThunkCreator,\r\n    deleteCategoryThunkCreator,\r\n    getCategoriesThunkCreator,\r\n} from \"../../redux/settings-reducer\";\r\nimport Categories from \"./Categories/Categories\";\r\nimport {getUser} from \"../../redux/account-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {isAuthSelector, isLoadingSelector} from \"../../selectors/account-selectors\";\r\nimport {categoriesSelector} from \"../../selectors/settings-selector\";\r\nimport {CategoryType} from \"../../redux/settings-reducer\";\r\nimport DataLoad from \"./DataLoad/DataLoad\";\r\nimport {deleteExpensesThunkCreator, getAllExpensesThunkCreator} from \"../../redux/history-reducer\";\r\nimport {expensesSelector} from \"../../selectors/history-selectors\";\r\nimport {Expenses} from \"../Analytics/Analytics\";\r\nimport './settings.scss';\r\nimport DataDelete from \"./DeleteData/DataDelete\";\r\n\r\n\r\n\r\ninterface Props {\r\n    categories: Array<CategoryType>,\r\n    isAuth: boolean,\r\n    isLoading: boolean,\r\n    expenses: Array<Expenses>,\r\n\r\n    addCategoriesThunkCreator(name: string, id: number): void,\r\n\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    getAllExpensesThunkCreator(): void,\r\n\r\n    getUser(): void,\r\n\r\n    deleteExpensesThunkCreator(id: Array<number>): void,\r\n\r\n    deleteCategoryThunkCreator(id: number): void,\r\n}\r\n\r\nconst Settings: React.FC<Props> = (props) => {\r\n    useEffect(() => {\r\n        props.getUser();\r\n        props.getAllExpensesThunkCreator();\r\n    }, []);\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'login'}/>\r\n    }\r\n\r\n    if (props.isLoading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className={'settings'}>\r\n            <h2>Settings</h2>\r\n            <Categories isAuth={props.isAuth} deleteCategoryThunkCreator={props.deleteCategoryThunkCreator}\r\n                        addCategoriesThunkCreator={props.addCategoriesThunkCreator}\r\n                        getCategoriesThunkCreator={props.getCategoriesThunkCreator} categories={props.categories}/>\r\n            <DataLoad expenses={props.expenses} categories={props.categories}/>\r\n            <DataDelete expenses={props.expenses} deleteExpensesThunkCreator={props.deleteExpensesThunkCreator}/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    categories: categoriesSelector(store),\r\n    isAuth: isAuthSelector(store),\r\n    isLoading: isLoadingSelector(store),\r\n    expenses: expensesSelector(store),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addCategoriesThunkCreator,\r\n    deleteCategoryThunkCreator,\r\n    getUser, getCategoriesThunkCreator, getAllExpensesThunkCreator, deleteExpensesThunkCreator\r\n})(Settings);"],"sourceRoot":""}