{"version":3,"sources":["assets/images/clear-dark.svg","assets/images/add-dark.svg","components/Settings/Categories/Category/Category.tsx","components/Settings/Categories/Categories.tsx","components/Settings/Settings.tsx"],"names":["module","exports","Category","props","useState","showConfirm","setShowConfirm","onDeleteCategory","deleteCategoryThunkCreator","id","onCloseConfirmWindow","Confirm","className","title","func","close","key","name","onClick","src","clear","alt","Categories","newCategory","setNewCategory","error","setError","useEffect","getCategoriesThunkCreator","isAuth","onKeyPress","e","replace","addCategoriesThunkCreator","Date","now","placeholder","autoFocus","type","value","onBlur","onChange","currentTarget","addDark","categories","map","item","connect","store","categoriesSelector","isAuthSelector","isLoading","isLoadingSelector","getUser","Loader","to"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,4IC2C5BC,EA/BmB,SAACC,GAAW,IAAD,EACHC,oBAAS,GADN,mBAClCC,EADkC,KACrBC,EADqB,KAGnCC,EAAmB,WACrBJ,EAAMK,2BAA2BL,EAAMM,KAGrCC,EAAuB,WACzBJ,GAAe,IAMnB,OACI,oCACKD,EACG,kBAACM,EAAA,EAAD,CAASC,UAAW,eAAgBC,MAAO,gBAAiBC,KAAMP,EACzDQ,MAAOL,IAChB,kBAACC,EAAA,EAAD,CAASC,UAAW,UAAWC,MAAO,gBAAiBC,KAAMP,EACpDQ,MAAOL,IACpB,yBAAKM,IAAKb,EAAMc,KAAML,UAAW,YAC7B,2BAAIT,EAAMc,MACV,4BAAQL,UAAW,SAAUM,QAbnB,WAClBZ,GAAe,KAaH,yBAAKa,IAAKC,IAAOC,IAAI,S,kBCiC1BC,G,OArDqB,SAACnB,GAAW,IAAD,EACLC,mBAAS,IADJ,mBACpCmB,EADoC,KACvBC,EADuB,OAEjBpB,oBAAS,GAFQ,mBAEpCqB,EAFoC,KAE7BC,EAF6B,KAI3CC,qBAAU,WACNxB,EAAMyB,8BACP,CAACzB,EAAM0B,SAEVF,qBAAU,WACNxB,EAAMyB,8BACP,IA0BH,OACI,yBAAKhB,UAAW,6BACZ,0CACA,yBAAKA,UAAW,oBACZ,2BAAOkB,WA5BF,SAACC,GACA,UAAVA,EAAEf,KAAmBO,GAAeA,EAAYS,QAAQ,OAAQ,KAChE7B,EAAM8B,0BAA0BV,EAAaW,KAAKC,OAClDX,EAAe,KAEfE,GAAS,IAuBwBU,YAAa,wBAAyBC,WAAW,EAAMzB,UAAWa,EAAQ,qCAAuC,gBAAiBa,KAAK,OAC7JC,MAAOhB,EAAaiB,OAAQ,kBAAMd,GAAS,IAAQe,SAZ7C,SAACV,GACtBP,EAAeO,EAAEW,cAAcH,OAC3Bd,GACAC,GAAS,MAUL,4BAAQd,UAAW,SAAUM,QArBnB,WACbK,GAAgBA,EAAYS,QAAQ,OAAQ,KAG7C7B,EAAM8B,0BAA0BV,EAAaW,KAAKC,OAClDX,EAAe,KAHfE,GAAS,KAoBD,yBAAKP,IAAKwB,IAAStB,IAAI,OAI9BlB,EAAMyC,WAAWC,KAAI,SAACC,GAAD,OAAe,kBAAC,EAAD,CAAU9B,IAAK8B,EAAKrC,GAAIQ,KAAM6B,EAAK7B,KAAMR,GAAIqC,EAAKrC,GACxCD,2BAA4BL,EAAMK,mC,uCCT9EuC,uBANS,SAACC,GAAD,MAAiB,CACrCJ,WAAYK,YAAmBD,GAC/BnB,OAAQqB,YAAeF,GACvBG,UAAWC,YAAkBJ,MAGO,CACpCf,8BACAzB,+BACA6C,YAASzB,+BAHEmB,EA1BmB,SAAC5C,GAK/B,OAJAwB,qBAAU,WACNxB,EAAMkD,YACP,IAEElD,EAAM0B,OAKP,yBAAKjB,UAAW,YACZ,wCACCT,EAAMgD,UAAY,kBAACG,EAAA,EAAD,MAAY,kBAAC,EAAD,CAAYzB,OAAQ1B,EAAM0B,OAAQrB,2BAA4BL,EAAMK,2BACxDyB,0BAA2B9B,EAAM8B,0BACjCL,0BAA2BzB,EAAMyB,0BAA2BgB,WAAYzC,EAAMyC,cARtH,kBAAC,IAAD,CAAUW,GAAI","file":"static/js/3.8838cba3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-dark.4def21f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-dark.24833611.svg\";","import React, {useState} from \"react\";\r\nimport Confirm from \"../../../Confirm/Confirm\";\r\nimport './category.scss'\r\nimport clear from \"../../../../assets/images/clear-dark.svg\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    id: any,\r\n    \r\n    deleteCategoryThunkCreator(id: string): void,\r\n}\r\n\r\nconst Category: React.FC<Props> = (props) => {\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n    const onDeleteCategory = () => {\r\n        props.deleteCategoryThunkCreator(props.id);\r\n    };\r\n\r\n    const onCloseConfirmWindow = () => {\r\n        setShowConfirm(false);\r\n    };\r\n    const onButtonClick = () => {\r\n        setShowConfirm(true)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConfirm ?\r\n                <Confirm className={'confirm show'} title={'Are you sure?'} func={onDeleteCategory}\r\n                         close={onCloseConfirmWindow}/> :\r\n                <Confirm className={'confirm'} title={'Are you sure?'} func={onDeleteCategory}\r\n                         close={onCloseConfirmWindow}/>}\r\n            <div key={props.name} className={'category'}>\r\n                <p>{props.name}</p>\r\n                <button className={'button'} onClick={onButtonClick}>\r\n                    <img src={clear} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Category;","import React, {useEffect, useState} from \"react\";\r\nimport Category from \"./Category/Category\";\r\nimport addDark from \"../../../assets/images/add-dark.svg\";\r\nimport './categories.scss';\r\n\r\ninterface Props {\r\n    categories: any,\r\n    isAuth: boolean,\r\n\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    addCategoriesThunkCreator(name: string, id: any): void,\r\n\r\n    deleteCategoryThunkCreator(id: string): void,\r\n}\r\n\r\nconst Categories: React.FC<Props> = (props) => {\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesThunkCreator();\r\n    }, [props.isAuth]);\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesThunkCreator();\r\n    }, []);\r\n\r\n    const onKeyAdd = (e: any) => {\r\n        if (e.key === 'Enter' && newCategory && newCategory.replace(/\\s+/g, '')) {\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            setNewCategory('');\r\n        } else {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const onAddCategory = () => {\r\n        if (!newCategory || !newCategory.replace(/\\s+/g, '')) {\r\n            setError(true);\r\n        } else {\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            setNewCategory('');\r\n        }\r\n    };\r\n    const onCategoryTyping = (e: any) => {\r\n        setNewCategory(e.currentTarget.value);\r\n        if (error) {\r\n            setError(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'settings__item categories'}>\r\n            <h3>Categories</h3>\r\n            <div className={'categories__form'}>\r\n                <input onKeyPress={onKeyAdd} placeholder={'Products, Bills, etc.'} autoFocus={true} className={error ? 'category-name category-name--error' : 'category-name'} type=\"text\"\r\n                       value={newCategory} onBlur={() => setError(false)} onChange={onCategoryTyping}/>\r\n                <button className={'button'} onClick={onAddCategory}>\r\n                    <img src={addDark} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n\r\n            {props.categories.map((item: any) => <Category key={item.id} name={item.name} id={item.id}\r\n                                                           deleteCategoryThunkCreator={props.deleteCategoryThunkCreator}/>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Categories;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addCategoriesThunkCreator,\r\n    deleteCategoryThunkCreator,\r\n    getCategoriesThunkCreator,\r\n} from \"../../redux/settings-reducer\";\r\nimport Categories from \"./Categories/Categories\";\r\nimport {getUser} from \"../../redux/account-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {isAuthSelector, isLoadingSelector} from \"../../selectors/account-selectors\";\r\nimport {categoriesSelector} from \"../../selectors/settings-selector\";\r\n\r\n\r\ninterface Props {\r\n    categories: any,\r\n    isAuth: boolean,\r\n    isLoading: boolean,\r\n\r\n    addCategoriesThunkCreator(name: string, id: any): void,\r\n\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    getUser(): void,\r\n\r\n    deleteCategoryThunkCreator(id: string): void,\r\n}\r\n\r\nconst Settings: React.FC<Props> = (props) => {\r\n    useEffect(() => {\r\n        props.getUser();\r\n    }, []);\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={'settings'}>\r\n            <h2>Settings</h2>\r\n            {props.isLoading ? <Loader/> : <Categories isAuth={props.isAuth} deleteCategoryThunkCreator={props.deleteCategoryThunkCreator}\r\n                                                       addCategoriesThunkCreator={props.addCategoriesThunkCreator}\r\n                                                       getCategoriesThunkCreator={props.getCategoriesThunkCreator} categories={props.categories}/>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    categories: categoriesSelector(store),\r\n    isAuth: isAuthSelector(store),\r\n    isLoading: isLoadingSelector(store),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addCategoriesThunkCreator,\r\n    deleteCategoryThunkCreator,\r\n    getUser, getCategoriesThunkCreator\r\n})(Settings);"],"sourceRoot":""}