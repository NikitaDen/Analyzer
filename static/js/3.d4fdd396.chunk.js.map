{"version":3,"sources":["assets/images/clear-dark.svg","assets/images/add-dark.svg","components/Settings/Categories/Category/Category.tsx","components/Settings/Categories/Categories.tsx","components/Settings/Settings.tsx"],"names":["module","exports","Category","props","useState","showConfirm","setShowConfirm","onDeleteCategory","deleteCategoryThunkCreator","id","onCloseConfirmWindow","Confirm","className","title","func","close","key","name","onClick","src","clear","alt","Categories","newCategory","setNewCategory","error","setError","useEffect","getCategoriesThunkCreator","isAuth","type","value","onBlur","onChange","e","currentTarget","addCategoriesThunkCreator","Date","now","addDark","categories","map","item","deleteCategory","connect","store","settings","account","addCategory","getCategories","setCategories","getUser","to"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,4IC8C5BC,EA/BmB,SAACC,GAAW,IAAD,EACHC,oBAAS,GADN,mBAClCC,EADkC,KACrBC,EADqB,KAGnCC,EAAmB,WACrBJ,EAAMK,2BAA2BL,EAAMM,KAGrCC,EAAuB,WACzBJ,GAAe,IAMnB,OACI,oCACKD,EACG,kBAACM,EAAA,EAAD,CAASC,UAAW,eAAgBC,MAAO,gBAAiBC,KAAMP,EACzDQ,MAAOL,IAChB,kBAACC,EAAA,EAAD,CAASC,UAAW,UAAWC,MAAO,gBAAiBC,KAAMP,EACpDQ,MAAOL,IACpB,yBAAKM,IAAKb,EAAMc,KAAML,UAAW,YAC7B,2BAAIT,EAAMc,MACV,4BAAQL,UAAW,SAAUM,QAbnB,WAClBZ,GAAe,KAaH,yBAAKa,IAAKC,IAAOC,IAAI,S,kBCuB1BC,G,OA3CqB,SAACnB,GAAW,IAAD,EACLC,mBAAS,IADJ,mBACpCmB,EADoC,KACvBC,EADuB,OAEjBpB,oBAAS,GAFQ,mBAEpCqB,EAFoC,KAE7BC,EAF6B,KAI3CC,qBAAU,WAENxB,EAAMyB,8BACP,CAACzB,EAAM0B,SAmBV,OACI,yBAAKjB,UAAW,6BACZ,0CACA,yBAAKA,UAAW,oBACZ,2BAAOA,UAAWa,EAAQ,qCAAuC,gBAAiBK,KAAK,OAChFC,MAAOR,EAAaS,OAAQ,kBAAMN,GAAS,IAAQO,SAZ7C,SAACC,GACtBV,EAAeU,EAAEC,cAAcJ,OAC3BN,GACAC,GAAS,MAUL,4BAAQd,UAAW,SAAUM,QAvBnB,WACbK,GAIDpB,EAAMiC,0BAA0Bb,EAAac,KAAKC,OAElDd,EAAe,KALfE,GAAS,KAsBD,yBAAKP,IAAKoB,IAASlB,IAAI,OAI9BlB,EAAMqC,WAAWC,KAAI,SAACC,GAAD,OAAe,kBAAC,EAAD,CAAU1B,IAAK0B,EAAKjC,GAAIQ,KAAMyB,EAAKzB,KAAMR,GAAIiC,EAAKjC,GACxCkC,eAAgBxC,EAAMwC,eAAgBnC,2BAA4BL,EAAMK,mC,eCCpHoC,uBANS,SAACC,GAAD,MAAiB,CACrCL,WAAYK,EAAMC,SAASN,WAC3BX,OAAQgB,EAAME,QAAQlB,UAIc,CAACmB,gBAAaZ,8BAA2Ba,kBAAeC,kBAAeP,mBAAgBnC,+BAA4B2C,YAASvB,+BAArJgB,EAzBmB,SAACzC,GAK/B,OAJAwB,qBAAU,WACNxB,EAAMgD,YACP,IAEEhD,EAAM0B,OAKP,yBAAKjB,UAAW,YACZ,wCACA,kBAAC,EAAD,CAAYiB,OAAQ1B,EAAM0B,OAAQrB,2BAA4BL,EAAMK,2BAA4B4B,0BAA2BjC,EAAMiC,0BAA2BR,0BAA2BzB,EAAMyB,0BAA2BY,WAAYrC,EAAMqC,WAC9NS,cAAe9C,EAAM8C,cAAeD,YAAa7C,EAAM6C,YACvDL,eAAgBxC,EAAMwC,kBAR/B,kBAAC,IAAD,CAAUS,GAAI","file":"static/js/3.d4fdd396.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-dark.4def21f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-dark.24833611.svg\";","import React, {useState} from \"react\";\r\nimport Confirm from \"../../../Confirm/Confirm\";\r\nimport './category.scss'\r\nimport clear from \"../../../../assets/images/clear-dark.svg\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    id: any,\r\n\r\n    deleteCategory(id: string): void,\r\n\r\n    deleteCategoryThunkCreator(id: string): void,\r\n\r\n}\r\n\r\nconst Category: React.FC<Props> = (props) => {\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n    const onDeleteCategory = () => {\r\n        props.deleteCategoryThunkCreator(props.id);\r\n    };\r\n\r\n    const onCloseConfirmWindow = () => {\r\n        setShowConfirm(false);\r\n    };\r\n    const onButtonClick = () => {\r\n        setShowConfirm(true)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConfirm ?\r\n                <Confirm className={'confirm show'} title={'Are you sure?'} func={onDeleteCategory}\r\n                         close={onCloseConfirmWindow}/> :\r\n                <Confirm className={'confirm'} title={'Are you sure?'} func={onDeleteCategory}\r\n                         close={onCloseConfirmWindow}/>}\r\n            <div key={props.name} className={'category'}>\r\n                <p>{props.name}</p>\r\n                <button className={'button'} onClick={onButtonClick}>\r\n                    <img src={clear} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Category;","import React, {useEffect, useState} from \"react\";\r\nimport Category from \"./Category/Category\";\r\nimport addDark from \"../../../assets/images/add-dark.svg\";\r\nimport './categories.scss';\r\n\r\ninterface Props {\r\n    categories: any,\r\n    isAuth: boolean,\r\n\r\n    getCategories(): void,\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    addCategory(category: string): void,\r\n    addCategoriesThunkCreator(name: string, id: any): void,\r\n\r\n    deleteCategory(id: string): void,\r\n    deleteCategoryThunkCreator(id: string): void,\r\n}\r\n\r\nconst Categories: React.FC<Props> = (props) => {\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // props.getCategories();\r\n        props.getCategoriesThunkCreator();\r\n    }, [props.isAuth]);\r\n\r\n    const onAddCategory = () => {\r\n        if (!newCategory) {\r\n            setError(true);\r\n        } else {\r\n            // props.addCategory(newCategory);\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            // props.setCategories();\r\n            setNewCategory('');\r\n        }\r\n    };\r\n    const onCategoryTyping = (e: any) => {\r\n        setNewCategory(e.currentTarget.value);\r\n        if (error) {\r\n            setError(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'settings__item categories'}>\r\n            <h3>Categories</h3>\r\n            <div className={'categories__form'}>\r\n                <input className={error ? 'category-name category-name--error' : 'category-name'} type=\"text\"\r\n                       value={newCategory} onBlur={() => setError(false)} onChange={onCategoryTyping}/>\r\n                <button className={'button'} onClick={onAddCategory}>\r\n                    <img src={addDark} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n\r\n            {props.categories.map((item: any) => <Category key={item.id} name={item.name} id={item.id}\r\n                                                           deleteCategory={props.deleteCategory} deleteCategoryThunkCreator={props.deleteCategoryThunkCreator}/>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Categories;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addCategoriesThunkCreator,\r\n    addCategory,\r\n    deleteCategory, deleteCategoryThunkCreator,\r\n    getCategories,\r\n    getCategoriesThunkCreator,\r\n    setCategories\r\n} from \"../../redux/settings-reducer\";\r\nimport Categories from \"./Categories/Categories\";\r\nimport {getUser} from \"../../redux/account-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ninterface Props {\r\n    categories: any,\r\n    isAuth: boolean,\r\n\r\n    addCategory(name: string): void,\r\n    addCategoriesThunkCreator(name: string, id: any): void,\r\n\r\n    getCategories(): void,\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    getUser(): void,\r\n\r\n    setCategories(): void,\r\n\r\n    deleteCategory(id: string): void,\r\n    deleteCategoryThunkCreator(id: string): void,\r\n}\r\n\r\nconst Settings: React.FC<Props> = (props) => {\r\n    useEffect(() => {\r\n        props.getUser();\r\n    }, []);\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={'settings'}>\r\n            <h2>Settings</h2>\r\n            <Categories isAuth={props.isAuth} deleteCategoryThunkCreator={props.deleteCategoryThunkCreator} addCategoriesThunkCreator={props.addCategoriesThunkCreator} getCategoriesThunkCreator={props.getCategoriesThunkCreator} categories={props.categories}\r\n                        getCategories={props.getCategories} addCategory={props.addCategory}\r\n                        deleteCategory={props.deleteCategory}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    categories: store.settings.categories,\r\n    isAuth: store.account.isAuth,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, {addCategory, addCategoriesThunkCreator, getCategories, setCategories, deleteCategory, deleteCategoryThunkCreator, getUser, getCategoriesThunkCreator})(Settings);"],"sourceRoot":""}