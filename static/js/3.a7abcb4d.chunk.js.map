{"version":3,"sources":["assets/images/clear-dark.svg","assets/images/add-dark.svg","components/Settings/Categories/Category/Category.tsx","components/Settings/Categories/Categories.tsx","components/Settings/Settings.tsx"],"names":["module","exports","Category","props","key","name","className","onClick","onShowConfirmWindow","setCategoryId","id","src","clear","alt","Categories","useState","newCategory","setNewCategory","error","setError","showConfirm","setShowConfirm","categoryId","useEffect","getCategoriesThunkCreator","isAuth","onKeyPress","e","replace","addCategoriesThunkCreator","Date","now","placeholder","autoFocus","type","value","onBlur","onChange","currentTarget","addDark","Confirm","title","func","deleteCategoryThunkCreator","close","categories","map","item","connect","store","categoriesSelector","isAuthSelector","isLoading","isLoadingSelector","getUser","Loader","to"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oIC8B5BC,EAjBmB,SAACC,GAE/B,OACI,oCACI,yBAAKC,IAAKD,EAAME,KAAMC,UAAW,YAC7B,2BAAIH,EAAME,MACV,4BAAQC,UAAW,SAAUC,QAAS,WAClCJ,EAAMK,sBACNL,EAAMM,cAAcN,EAAMO,MAE1B,yBAAKC,IAAKC,IAAOC,IAAI,S,mCCqE1BC,EA1EqB,SAACX,GAAW,IAAD,EACLY,mBAAS,IADJ,mBACpCC,EADoC,KACvBC,EADuB,OAEjBF,oBAAS,GAFQ,mBAEpCG,EAFoC,KAE7BC,EAF6B,OAGLJ,oBAAS,GAHJ,mBAGpCK,EAHoC,KAGvBC,EAHuB,OAIPN,mBAAS,GAJF,mBAIpCO,EAJoC,KAIxBb,EAJwB,KAO3Cc,qBAAU,WACNpB,EAAMqB,8BACP,CAACrB,EAAMsB,SAEVF,qBAAU,WACNpB,EAAMqB,8BACP,IAEH,IAgCMhB,EAAsB,WACxBa,GAAe,IAGnB,OACI,yBAAKf,UAAW,6BACZ,0CACA,yBAAKA,UAAW,oBACZ,2BAAOoB,WAxCF,SAACC,GACA,UAAVA,EAAEvB,KAAmBY,GAAeA,EAAYY,QAAQ,OAAQ,KAChEzB,EAAM0B,0BAA0Bb,EAAac,KAAKC,OAClDd,EAAe,KAEfE,GAAS,IAmCwBa,YAAa,wBAAyBC,WAAW,EAAM3B,UAAWY,EAAQ,qCAAuC,gBAAiBgB,KAAK,OAC7JC,MAAOnB,EAAaoB,OAAQ,kBAAMjB,GAAS,IAAQkB,SAvB7C,SAACV,GACtBV,EAAeU,EAAEW,cAAcH,OAC3BjB,GACAC,GAAS,MAqBL,4BAAQb,UAAW,SAAUC,QAjCnB,WACbS,GAAgBA,EAAYY,QAAQ,OAAQ,KAG7CzB,EAAM0B,0BAA0Bb,EAAac,KAAKC,OAClDd,EAAe,KAHfE,GAAS,KAgCD,yBAAKR,IAAK4B,IAAS1B,IAAI,OAI/B,kBAAC2B,EAAA,EAAD,CAASlC,UAAWc,EAAc,eAAiB,UAAWqB,MAAO,gBAC5DC,KAAM,kBAvBGhC,GAuBqBY,OAtB3CnB,EAAMwC,2BAA2BjC,GADZ,IAACA,GAwBTkC,MApBY,WACzBvB,GAAe,MAqBX,yBAAKf,UAAW,qBACXH,EAAM0C,WAAWC,KAAI,SAACC,GAAD,OAAwB,kBAAC,EAAD,CAAU3C,IAAK2C,EAAKrC,GAAIL,KAAM0C,EAAK1C,KAAMK,GAAIqC,EAAKrC,GACjDD,cAAeA,EAAeD,oBAAqBA,U,uCC9BnGwC,uBANS,SAACC,GAAD,MAAiB,CACrCJ,WAAYK,YAAmBD,GAC/BxB,OAAQ0B,YAAeF,GACvBG,UAAWC,YAAkBJ,MAGO,CACpCpB,8BACAc,+BACAW,YAAS9B,+BAHEwB,EA1BmB,SAAC7C,GAK/B,OAJAoB,qBAAU,WACNpB,EAAMmD,YACP,IAEEnD,EAAMsB,OAKP,yBAAKnB,UAAW,YACZ,wCACCH,EAAMiD,UAAY,kBAACG,EAAA,EAAD,MAAY,kBAAC,EAAD,CAAY9B,OAAQtB,EAAMsB,OAAQkB,2BAA4BxC,EAAMwC,2BACxDd,0BAA2B1B,EAAM0B,0BACjCL,0BAA2BrB,EAAMqB,0BAA2BqB,WAAY1C,EAAM0C,cARtH,kBAAC,IAAD,CAAUW,GAAI","file":"static/js/3.a7abcb4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-dark.4def21f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-dark.24833611.svg\";","import React from \"react\";\r\nimport './category.scss'\r\nimport clear from \"../../../../assets/images/clear-dark.svg\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    id: number,\r\n\r\n    onShowConfirmWindow(): void,\r\n\r\n    setCategoryId(id: number): any,\r\n}\r\n\r\nconst Category: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div key={props.name} className={'category'}>\r\n                <p>{props.name}</p>\r\n                <button className={'button'} onClick={() => {\r\n                    props.onShowConfirmWindow();\r\n                    props.setCategoryId(props.id);\r\n                }}>\r\n                    <img src={clear} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Category;","import React, {useEffect, useState} from \"react\";\r\nimport Category from \"./Category/Category\";\r\nimport addDark from \"../../../assets/images/add-dark.svg\";\r\nimport './categories.scss';\r\nimport Confirm from \"../../Confirm/Confirm\";\r\nimport {CategoryType} from \"../../../redux/settings-reducer\";\r\n\r\ninterface Props {\r\n    categories: Array<CategoryType>,\r\n    isAuth: boolean,\r\n\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    addCategoriesThunkCreator(name: string, id: number): void,\r\n\r\n    deleteCategoryThunkCreator(id: number): void,\r\n}\r\n\r\nconst Categories: React.FC<Props> = (props) => {\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n    const [categoryId, setCategoryId] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesThunkCreator();\r\n    }, [props.isAuth]);\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesThunkCreator();\r\n    }, []);\r\n\r\n    const onKeyAdd = (e: any) => {\r\n        if (e.key === 'Enter' && newCategory && newCategory.replace(/\\s+/g, '')) {\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            setNewCategory('');\r\n        } else {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const onAddCategory = () => {\r\n        if (!newCategory || !newCategory.replace(/\\s+/g, '')) {\r\n            setError(true);\r\n        } else {\r\n            props.addCategoriesThunkCreator(newCategory, Date.now());\r\n            setNewCategory('');\r\n        }\r\n    };\r\n\r\n    const onCategoryTyping = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewCategory(e.currentTarget.value);\r\n        if (error) {\r\n            setError(false);\r\n        }\r\n    };\r\n\r\n    const onDeleteCategory = (id: number) => {\r\n        props.deleteCategoryThunkCreator(id);\r\n    };\r\n\r\n    const onCloseConfirmWindow = () => {\r\n        setShowConfirm(false);\r\n    };\r\n    const onShowConfirmWindow = () => {\r\n        setShowConfirm(true)\r\n    };\r\n\r\n    return (\r\n        <div className={'settings__item categories'}>\r\n            <h3>Categories</h3>\r\n            <div className={'categories__form'}>\r\n                <input onKeyPress={onKeyAdd} placeholder={'Products, Bills, etc.'} autoFocus={true} className={error ? 'category-name category-name--error' : 'category-name'} type=\"text\"\r\n                       value={newCategory} onBlur={() => setError(false)} onChange={onCategoryTyping}/>\r\n                <button className={'button'} onClick={onAddCategory}>\r\n                    <img src={addDark} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n\r\n            <Confirm className={showConfirm ? 'confirm show' : 'confirm'} title={'Are you sure?'}\r\n                     func={() => onDeleteCategory(+categoryId)}\r\n                     close={onCloseConfirmWindow}/>\r\n\r\n            <div className={'categories__items'}>\r\n                {props.categories.map((item: CategoryType) => <Category key={item.id} name={item.name} id={item.id}\r\n                                                               setCategoryId={setCategoryId} onShowConfirmWindow={onShowConfirmWindow}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Categories;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addCategoriesThunkCreator,\r\n    deleteCategoryThunkCreator,\r\n    getCategoriesThunkCreator,\r\n} from \"../../redux/settings-reducer\";\r\nimport Categories from \"./Categories/Categories\";\r\nimport {getUser} from \"../../redux/account-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {isAuthSelector, isLoadingSelector} from \"../../selectors/account-selectors\";\r\nimport {categoriesSelector} from \"../../selectors/settings-selector\";\r\nimport {CategoryType} from \"../../redux/settings-reducer\";\r\n\r\n\r\ninterface Props {\r\n    categories: Array<CategoryType>,\r\n    isAuth: boolean,\r\n    isLoading: boolean,\r\n\r\n    addCategoriesThunkCreator(name: string, id: number): void,\r\n\r\n    getCategoriesThunkCreator(): void,\r\n\r\n    getUser(): void,\r\n\r\n    deleteCategoryThunkCreator(id: number): void,\r\n}\r\n\r\nconst Settings: React.FC<Props> = (props) => {\r\n    useEffect(() => {\r\n        props.getUser();\r\n    }, []);\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={'settings'}>\r\n            <h2>Settings</h2>\r\n            {props.isLoading ? <Loader/> : <Categories isAuth={props.isAuth} deleteCategoryThunkCreator={props.deleteCategoryThunkCreator}\r\n                                                       addCategoriesThunkCreator={props.addCategoriesThunkCreator}\r\n                                                       getCategoriesThunkCreator={props.getCategoriesThunkCreator} categories={props.categories}/>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    categories: categoriesSelector(store),\r\n    isAuth: isAuthSelector(store),\r\n    isLoading: isLoadingSelector(store),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addCategoriesThunkCreator,\r\n    deleteCategoryThunkCreator,\r\n    getUser, getCategoriesThunkCreator\r\n})(Settings);"],"sourceRoot":""}