{"version":3,"sources":["components/Menu/Menu.tsx","redux/history-reducer.ts","redux/settings-reducer.ts","components/History/Form/Form.tsx","components/Button/Button.tsx","components/History/Filter/ItemDates/ItemDates.tsx","components/History/Filter/ItemFilter/ItemFilter.tsx","components/History/Filter/ItemSort/ItemSort.tsx","components/History/Filter/Filter.tsx","components/Confirm/Confirm.tsx","components/History/Expense/Expense.tsx","components/History/TableHeader/TableHeader.tsx","components/History/HistoryItems/HistoryItems.tsx","components/History/History.tsx","components/Settings/Categories/Category/Category.tsx","components/Settings/Categories/Categories.tsx","components/Settings/Settings.tsx","components/Analytics/Period/Period.tsx","components/Analytics/AnalyticsInfo/AnalyticsInfo.tsx","components/Chart/Chart.tsx","components/Analytics/Analytics.tsx","App.tsx","serviceWorker.ts","redux/analytics-reducer.ts","redux/account-reducer.ts","redux/redux-store.ts","index.tsx","assets/images/separator.svg","assets/images/save.svg","assets/images/search.svg","assets/images/clear.svg","assets/images/history.svg","assets/images/analytics.svg","assets/images/settings.svg","assets/images/edit.svg","assets/images/add.svg","assets/images/delete.svg","assets/images/clear-dark.svg","assets/images/add-dark.svg"],"names":["Menu","to","src","history","alt","analytics","settings","initialState","expenses","addExpense","expense","type","setExpenses","getExpenses","changeExpense","id","name","category","spent","count","price","historyReducer","state","action","date","Date","toLocaleString","now","filter","item","includes","localStorage","setItem","JSON","stringify","parse","getItem","map","categories","getCategories","settingsReducer","connect","store","props","useState","setName","setCategory","setPrice","setCount","error","setError","useEffect","showForm","className","htmlFor","value","onChange","e","target","key","min","onClick","save","Button","disabled","func","image","title","ItemDates","maxDate","dateHigher","onChangeDateLower","selected","dateLower","minDate","onChangeDateHigher","search","setFilterInRange","clear","ItemFilter","setFilter","ItemSort","sort","setSort","sortValues","descending","setDescending","Filter","filterInRange","Confirm","close","Expense","editMode","setEditMode","setSpent","showConfirm","setShowConfirm","checkedAll","checked","setChecked","setChosenItems","Array","from","Set","chosenItems","splice","indexOf","deleteExpense","currentTarget","edit","React","memo","chooseAllItems","separator","HistoryItems","compareNames","a","b","compareCategory","defineSort","setCheckedAll","items","length","reverse","useCallback","setHours","setDateLower","setDate","getDate","setDateHigher","setShowForm","add","del","Category","deleteCategory","setCategories","Categories","newCategory","setNewCategory","onBlur","addCategory","addDark","Period","setShowForPeriod","AnalyticsInfo","findTotalSpending","findBiggerSpent","findSpentCategory","showMoreInfo","moreInfo","showExpensesPerDay","Math","ceil","Chart","style","width","height","sum","backgroundColor","random","getFullYear","getMonth","showForPeriod","setShowMoreInfo","setMoreInfo","reduce","forEach","push","elem","max","App","path","Boolean","window","location","hostname","match","analyticsReducer","accountReducer","reducers","combineReducers","account","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.96c800b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './menu.scss';\r\nimport history from './../../assets/images/history.svg';\r\nimport analytics from './../../assets/images/analytics.svg';\r\nimport settings from './../../assets/images/settings.svg';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav>\r\n            <NavLink to={'/history'}>\r\n                <p>History</p>\r\n                <img src={history} alt=\"\"/>\r\n            </NavLink>\r\n            <NavLink to={'/analytics'}>\r\n                <p>Analytics</p>\r\n                <img src={analytics} alt=\"\"/>\r\n            </NavLink>\r\n            <NavLink to={'/settings'}>\r\n                <p>Settings</p>\r\n                <img src={settings} alt=\"\"/>\r\n            </NavLink>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Menu;","const ADD_EXPENSE = 'ADD_EXPENSE';\r\nconst DELETE_EXPENSE = 'DELETE_EXPENSE';\r\nconst SET_EXPENSES = 'SET_EXPENSES';\r\nconst GET_EXPENSES = 'GET_EXPENSES';\r\nconst CHANGE_EXPENSE = 'CHANGE_EXPENSE';\r\n\r\ninterface Expense {\r\n    name: string,\r\n    category: string,\r\n    spent: string,\r\n    count: string\r\n}\r\n\r\nlet initialState: any = {\r\n    expenses: [],\r\n};\r\n\r\nconst historyReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case ADD_EXPENSE:\r\n            return {\r\n                ...state,\r\n                expenses: [\r\n                    ...state.expenses,\r\n                    {\r\n                        ...action.expense,\r\n                        date: `${new Date().toLocaleString()}`,\r\n                        id: Date.now()\r\n                    },\r\n                ]\r\n            };\r\n        case DELETE_EXPENSE:\r\n            return {\r\n                ...state,\r\n                expenses: [\r\n                    // ...state.expenses.filter((item: any) => item.id !== action.id)\r\n                    ...state.expenses.filter((item: any) => !action.id.includes(item.id))\r\n                ]\r\n            };\r\n        case SET_EXPENSES: {\r\n            localStorage.setItem('expenses', JSON.stringify([...state.expenses]));\r\n            return state;\r\n        }\r\n        case GET_EXPENSES: {\r\n            // @ts-ignore\r\n            let expenses: any = JSON.parse(localStorage.getItem('expenses')) || [];\r\n            return {\r\n                ...state,\r\n                expenses: expenses\r\n            };\r\n        }\r\n        case CHANGE_EXPENSE: {\r\n            return {\r\n                ...state,\r\n                expenses: [\r\n                    ...state.expenses.map((item: any) => {\r\n                        if (item.id === action.id) {\r\n                            return {\r\n                                ...item,\r\n                                name: action.name,\r\n                                category: action.category,\r\n                                count: action.count,\r\n                                spent: action.spent,\r\n                                price: action.price,\r\n                            }\r\n                        }\r\n                        return item\r\n                    })\r\n                ]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addExpense = (expense: Expense) => ({type: ADD_EXPENSE, expense});\r\nexport const deleteExpense = (id: any) => ({type: DELETE_EXPENSE, id});\r\nexport const setExpenses = () => ({type: SET_EXPENSES});\r\nexport const getExpenses = () => ({type: GET_EXPENSES});\r\nexport const changeExpense = (id: number, name: string, category: any, spent: any, count: any, price: any) => ({type: CHANGE_EXPENSE, id, name, category, spent, count, price});\r\n\r\nexport default historyReducer;","const ADD_CATEGORY = 'ADD_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\r\nconst SET_CATEGORIES = 'SET_CATEGORIES';\r\nconst GET_CATEGORIES = 'GET_CATEGORIES';\r\n\r\nlet initialState: any = {\r\n    categories: [\r\n        {name: 'Products', id: 1},\r\n        {name: 'Entertainment', id: 2},\r\n        {name: 'Bill', id: 3},\r\n    ]\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_CATEGORIES: {\r\n            localStorage.setItem('categories', JSON.stringify([...state.categories]));\r\n            return state;\r\n        }\r\n        case GET_CATEGORIES: {\r\n            // @ts-ignore\r\n            let categories: any = JSON.parse(localStorage.getItem('categories')) || [\r\n                {name: 'Products', id: 1},\r\n                {name: 'Entertainment', id: 2},\r\n                {name: 'Bill', id: 3},\r\n                {name: 'Clothes', id: 3},\r\n            ];\r\n            return {\r\n                ...state,\r\n                categories: categories\r\n            };\r\n        }\r\n        case ADD_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                categories: [\r\n                    ...state.categories,\r\n                    {\r\n                        name: action.name,\r\n                        id: Date.now(),\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        case DELETE_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                categories: [\r\n                    ...state.categories.filter((item: any) => item.id !== action.id)\r\n                ]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addCategory = (name: string) => ({type: ADD_CATEGORY, name});\r\nexport const deleteCategory = (id: string) => ({type: DELETE_CATEGORY, id});\r\nexport const getCategories = () => ({type: GET_CATEGORIES});\r\nexport const setCategories = () => ({type: SET_CATEGORIES});\r\n\r\nexport default settingsReducer;","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addExpense, changeExpense, getExpenses, setExpenses} from \"../../../redux/history-reducer\";\r\nimport './form.scss';\r\nimport save from './../../../assets/images/save.svg';\r\nimport {getCategories} from \"../../../redux/settings-reducer\";\r\n\r\ninterface Props {\r\n    categories: any,\r\n    showForm: boolean,\r\n\r\n    getExpenses(): void\r\n    getCategories(): void\r\n}\r\n\r\nconst Form: React.FC<Props> = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [category, setCategory] = useState('Products');\r\n    const [price, setPrice] = useState('0');\r\n    const [count, setCount] = useState('1');\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        props.getExpenses();\r\n        props.getCategories();\r\n    }, []);\r\n\r\n    const onAddExpenseButton = () => {\r\n        if (name) {\r\n            // @ts-ignore\r\n            props.addExpense({category, count, name, price, spent: price * count});\r\n            // @ts-ignore\r\n            props.setExpenses();\r\n            setName('');\r\n            setCategory('Products');\r\n            setCount('1');\r\n            setPrice('0');\r\n        } else {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.showForm ? <>\r\n                <div className={'form'}>\r\n                    <div className={'form__element'}>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" className={!error ? 'name' : 'name name--error'} id={'name'} value={name}\r\n                               onChange={e => {\r\n                                   setName(e.target.value);\r\n                                   setError(false);\r\n                               }}/>\r\n                    </div>\r\n                    <div className={'form__element'}>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select value={category} onChange={(e) => setCategory(e.target.value)} name=\"category\"\r\n                                id=\"category\">\r\n                            {props.categories.map((item: any) => <option key={item.name}\r\n                                                                         value={item.name}>{item.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className={'form__element'}>\r\n                        <label htmlFor=\"count\">Count</label>\r\n                        <input type=\"number\" id={'count'} value={count} min={0}\r\n                               onChange={(e) => setCount(e.target.value)}/>\r\n                    </div>\r\n                    <div className={'form__element'}>\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <input type=\"number\" id={'price'} value={price} min={0}\r\n                               onChange={(e) => setPrice(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <button className={'button button--addItem'} onClick={onAddExpenseButton}>\r\n                        <img src={save} alt=\"\"/>\r\n                        <p>Save item</p>\r\n                    </button>\r\n                </div>\r\n\r\n            </> : null}</>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (store: any) => ({\r\n    expenses: store.history.expenses,\r\n    categories: store.settings.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {addExpense, setExpenses, getExpenses, changeExpense, getCategories})(Form);","import React from \"react\";\r\n\r\ninterface Props {\r\n    image: string,\r\n    className: string,\r\n    title: string,\r\n    disabled?: boolean,\r\n    func(val?: any): void,\r\n}\r\n\r\nconst Button: React.FC<Props> = (props) => {\r\n    return (\r\n        <button disabled={props.disabled} className={props.className} onClick={props.func}>\r\n            <img src={props.image} alt=\"\"/>\r\n            <p>{props.title}</p>\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Button from \"../../../Button/Button\";\r\nimport search from './../../../../assets/images/search.svg';\r\nimport clear from './../../../../assets/images/clear.svg';\r\n\r\ninterface Props {\r\n    filterInRange: boolean,\r\n    dateHigher: any,\r\n    dateLower: any,\r\n\r\n    onChangeDateLower(date: any): void,\r\n\r\n    onChangeDateHigher(date: any): void,\r\n\r\n    setFilterInRange(filter: boolean): void,\r\n}\r\n\r\nconst ItemDates: React.FC<Props> = (props) => {\r\n\r\n    const onDatesSet = () => {\r\n        props.setFilterInRange(true);\r\n    };\r\n    const onDatesClear = () => {\r\n        props.setFilterInRange(false)\r\n    };\r\n\r\n    return (\r\n        <div className={'filter__item filter__item--dates'}>\r\n            <label htmlFor=\"sort\">Dates</label>\r\n            <DatePicker maxDate={props.dateHigher} onChange={props.onChangeDateLower} selected={props.dateLower}/>\r\n            <DatePicker minDate={props.dateLower} disabled={props.dateLower > props.dateHigher}\r\n                        onChange={props.onChangeDateHigher} selected={props.dateHigher}/>\r\n\r\n            <div className={'buttons'}>\r\n                <Button image={search} func={onDatesSet} className={'button button--search'} title={'Set'} disabled={props.dateLower > props.dateHigher}/>\r\n                <Button image={clear} func={onDatesClear} className={'button button--clear'} title={'Clear'} disabled={props.dateLower > props.dateHigher}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemDates;","import React from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\ninterface Props {\r\n    filter: string,\r\n    categories: any,\r\n\r\n    setFilter(value: any): void,\r\n\r\n    setSort(value: any): void,\r\n\r\n    setDescending(value: any): void,\r\n}\r\n\r\nconst ItemFilter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className={'filter__item filter__item--filter'}>\r\n            <label htmlFor=\"filter\">Filter</label>\r\n            <select value={props.filter} onChange={(e) => props.setFilter(e.target.value)} name=\"filter\"\r\n                    id=\"filter\">\r\n                <option value=\"noFilter\">No filter</option>\r\n                {props.categories.map((item: any) => <option key={item.name}\r\n                                                             value={item.name}>{item.name}</option>)}\r\n            </select>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default ItemFilter;","import React from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\ninterface Props {\r\n    sort: string,\r\n    sortValues: Array<string>,\r\n    descending: string,\r\n    setSort(value: any): void,\r\n    setDescending(value: any): void,\r\n}\r\n\r\nconst ItemSort: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className={'filter__item filter__item--sort'}>\r\n            <label htmlFor=\"sort\">Sort</label>\r\n            <select value={props.sort} onChange={(e) => props.setSort(e.target.value)} name=\"filter\"\r\n                    id=\"sort\">\r\n                {props.sortValues.map((item: string) => <option key={item} value={item}>{item}</option>)}\r\n            </select>\r\n            <select value={props.descending} onChange={(e) => props.setDescending(e.target.value)}\r\n                    name=\"descending\">\r\n                <option value=\"noSort\">No sort</option>\r\n                <option value=\"Ascending\">Ascending</option>\r\n                <option value=\"Descending\">Descending</option>\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemSort;","import React from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './filter.scss';\r\nimport ItemDates from \"./ItemDates/ItemDates\";\r\nimport ItemFilter from \"./ItemFilter/ItemFilter\";\r\nimport ItemSort from \"./ItemSort/ItemSort\";\r\n\r\ninterface Props {\r\n    filter: string,\r\n    categories: any,\r\n    sort: string,\r\n    filterInRange: boolean,\r\n    sortValues: Array<string>,\r\n    descending: string,\r\n    dateHigher: any,\r\n    dateLower: any,\r\n\r\n    setFilter(value: any): void,\r\n\r\n    setSort(value: any): void,\r\n\r\n    setDescending(value: any): void,\r\n\r\n    onChangeDateLower(date: any): void,\r\n\r\n    onChangeDateHigher(date: any): void,\r\n\r\n    setFilterInRange(filter: boolean): void,\r\n}\r\n\r\nconst Filter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className={'filter'}>\r\n            <ItemFilter filter={props.filter} categories={props.categories} setFilter={props.setFilter}\r\n                        setSort={props.setSort} setDescending={props.setDescending}/>\r\n\r\n            <ItemSort sort={props.sort} sortValues={props.sortValues} descending={props.descending}\r\n                      setSort={props.setSort} setDescending={props.setDescending}/>\r\n\r\n            <ItemDates filterInRange={props.filterInRange} dateHigher={props.dateHigher} dateLower={props.dateLower}\r\n                       onChangeDateLower={props.onChangeDateLower} onChangeDateHigher={props.onChangeDateHigher}\r\n                       setFilterInRange={props.setFilterInRange}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport './confirm.scss';\r\n\r\ninterface Props {\r\n    title: string,\r\n    func(): void,\r\n    close(): any,\r\n}\r\n\r\nconst Confirm: React.FC<Props> = (props) => {\r\n    return (\r\n        <div className={'confirm'}>\r\n            <p>{props.title}</p>\r\n            <button className={'button button--confirm'} onClick={props.func}>Yes</button>\r\n            <button className={'button button--reject'} onClick={props.close}>No</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Confirm;","import React, {useEffect, useState} from \"react\";\r\nimport Confirm from \"../../Confirm/Confirm\";\r\nimport './expense.scss';\r\nimport Button from \"../../Button/Button\";\r\nimport edit from \"../../../assets/images/edit.svg\";\r\nimport save from \"../../../assets/images/save.svg\";\r\n\r\ninterface Props {\r\n    id: number,\r\n    name: string,\r\n    category: string,\r\n    count: any,\r\n    price: any,\r\n    spent: any,\r\n    date: string,\r\n    categories: any,\r\n    chosenItems: Array<any>,\r\n    checkedAll: boolean,\r\n    setChosenItems(val?: any): any,\r\n\r\n    changeExpense(id: number, name: string, category: any, spent: any, count: any, price: any): void,\r\n\r\n    deleteExpense(id: any): void,\r\n\r\n    setExpenses(): void,\r\n}\r\n\r\nconst Expense: React.FC<Props> = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [category, setCategory] = useState(props.category);\r\n    const [price, setPrice] = useState(props.price);\r\n    const [spent, setSpent] = useState(props.spent);\r\n    const [count, setCount] = useState(props.count);\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n    const [checked, setChecked] = useState(props.checkedAll);\r\n\r\n    useEffect(() => {\r\n        setSpent(price * count)\r\n    }, [count, price]);\r\n\r\n    useEffect(() => {\r\n        setChecked(props.checkedAll);\r\n    }, [props.checkedAll]);\r\n\r\n    useEffect(() => {\r\n        if (checked) {\r\n            props.setChosenItems(Array.from(new Set([...props.chosenItems, props.id])));\r\n        } else {\r\n            props.chosenItems.splice(props.chosenItems.indexOf(props.id), props.chosenItems.indexOf(props.id) === -1 ? 0 : 1);\r\n            props.setChosenItems([...props.chosenItems]);\r\n        }\r\n    }, [checked]);\r\n\r\n    const onDeleteCategory = () => {\r\n        props.deleteExpense(props.id);\r\n        props.setExpenses();\r\n    };\r\n\r\n    const onEditCategory = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const onSaveCategory = () => {\r\n        props.changeExpense(props.id, name, category, spent, count, price);\r\n        props.setExpenses();\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onChangeName = (e: any) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n\r\n    const onChangeCategory = (e: any) => {\r\n        setCategory(e.currentTarget.value)\r\n    };\r\n\r\n    const onChooseItem = () => {\r\n        setChecked(!checked);\r\n    };\r\n\r\n    return (\r\n        <div className={checked ? 'expense expense--chosen' : 'expense'}>\r\n            {showConfirm ? <Confirm title={'Are you sure?'} func={onDeleteCategory} close={() => setShowConfirm(false)}/> : null}\r\n            {!editMode ?\r\n                <>\r\n                    <div className={'checkbox-element'}>\r\n                        <input checked={checked} onChange={onChooseItem} type=\"checkbox\"/>\r\n                        <label>\r\n                            <div className={'checked'}/>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <p>{props.name}</p>\r\n                    <p>{props.category}</p>\r\n                    <p>{props.price}</p>\r\n                    <p>{props.count}</p>\r\n                    <p>{props.spent}</p>\r\n                    \r\n                    <div>\r\n                        <p>{props.date}</p>\r\n                        {checked ? <Button image={edit} func={onEditCategory} className={'button button--edit'} title={'Edit'}/> : null}\r\n                    </div>\r\n                </> :\r\n                <>\r\n                    <p/>\r\n                    <input type=\"text\" onChange={onChangeName} value={name}/>\r\n                    <select value={category} onChange={onChangeCategory} name=\"filter\" id=\"filter\">\r\n                        {props.categories.map((item: any) => <option key={item.name} value={item.name}>{item.name}</option>)}\r\n                    </select>\r\n                    <input type=\"number\" id={'price'} value={price} min={0} onChange={(e) => setPrice(e.target.value)}/>\r\n                    <input type=\"number\" id={'count'} value={count} min={1} onChange={(e) => setCount(e.target.value)}/>\r\n\r\n                    <p>{spent}</p>\r\n\r\n                    <div>\r\n                        <p>{props.date}</p>\r\n                        <Button image={save} func={onSaveCategory} className={'button button--save'} title={'Save'}/>\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Expense;","import React from \"react\";\r\nimport './../HistoryItems/history.scss';\r\nimport separator from './../../../assets/images/separator.svg';\r\n\r\ninterface Props {\r\n    checkedAll: boolean,\r\n    chooseAllItems(): void\r\n}\r\n\r\nconst TableHeader: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className={'table__header'}>\r\n            <div className={'checkbox-element'}>\r\n                <input checked={props.checkedAll} onChange={props.chooseAllItems} type=\"checkbox\"/>\r\n                <label>\r\n                    <div className={'checked'}/>\r\n                </label>\r\n            </div>\r\n\r\n            <div className={'table__header__item'}>\r\n                <img src={separator} alt=\"\"/>\r\n                <p>Name</p>\r\n            </div>\r\n            <div className={'table__header__item'}>\r\n                <img src={separator} alt=\"\"/>\r\n                <p>Category</p>\r\n            </div>\r\n            <div className={'table__header__item'}>\r\n                <img src={separator} alt=\"\"/>\r\n                <p>Price</p>\r\n            </div>\r\n            <div className={'table__header__item'}>\r\n                <img src={separator} alt=\"\"/>\r\n                <p>Count</p>\r\n            </div>\r\n            <div className={'table__header__item'}>\r\n                <img src={separator} alt=\"\"/>\r\n                <p>Spent</p>\r\n            </div>\r\n            <div className={'table__header__item'}>\r\n                <img src={separator} alt=\"\"/>\r\n                <p>Date</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default React.memo(TableHeader);","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport Expense from \"./../Expense/Expense\";\r\nimport './history.scss';\r\nimport TableHeader from \"../TableHeader/TableHeader\";\r\n\r\ninterface Props {\r\n    filter: any,\r\n    sort: string,\r\n    descending: string,\r\n    expenses: any,\r\n    categories: any,\r\n    dateLower: any,\r\n    dateHigher: any,\r\n    filterInRange: boolean,\r\n    chosenItems: any,\r\n\r\n    setChosenItems(val?: any): any\r\n\r\n    changeExpense(): void,\r\n\r\n    deleteExpense(id: any): void,\r\n\r\n    setExpenses(): void,\r\n}\r\n\r\nconst HistoryItems: React.FC<Props> = (props) => {\r\n\r\n    const compareNames = (a: any, b: any) => {\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    };\r\n    const compareCategory = (a: any, b: any) => {\r\n        if (a.category > b.category) {\r\n            return 1;\r\n        }\r\n        if (a.category < b.category) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    };\r\n    const defineSort = () => {\r\n        switch (props.sort) {\r\n            case 'By Date':\r\n                return (a: any, b: any) => b.id - a.id;\r\n            case 'By Spent':\r\n                return (a: any, b: any) => b.spent - a.spent;\r\n            case 'By Categories':\r\n                return compareCategory;\r\n            case 'By Name':\r\n                return compareNames;\r\n            case 'By Count':\r\n                return (a: any, b: any) => b.count - a.count;\r\n            default:\r\n                return (a: any, b: any) => b.id - a.id;\r\n        }\r\n    };\r\n    const expenses = [...props.expenses].sort(defineSort());\r\n    const [checkedAll, setCheckedAll] = useState(false);\r\n    const expense = (item: any) => {\r\n        return (\r\n            <Expense id={item.id}\r\n                     key={item.id}\r\n                     categories={props.categories}\r\n                     name={item.name}\r\n                     category={item.category}\r\n                     chosenItems={props.chosenItems}\r\n                     setChosenItems={props.setChosenItems}\r\n                     checkedAll={checkedAll}\r\n                     count={item.count}\r\n                     price={item.price}\r\n                     spent={item.spent}\r\n                     date={item.date}\r\n                     changeExpense={props.changeExpense}\r\n                     deleteExpense={props.deleteExpense}\r\n                     setExpenses={props.setExpenses}\r\n            />\r\n        )\r\n    };\r\n\r\n    const items = (props.expenses.length && props.filter !== 'noFilter' && props.descending === 'Descending')\r\n        ? expenses.filter((item: any) => item.category === props.filter).map((item: any) => expense(item))\r\n        : (props.expenses.length && props.filter !== 'noFilter' && props.descending !== 'Descending')\r\n            ? expenses.sort(defineSort()).filter((item: any) => item.category === props.filter).map((item: any) => expense(item)).reverse()\r\n            : (props.descending === 'Descending')\r\n                ? expenses.map((item: any) => expense(item))\r\n                : expenses.map((item: any) => expense(item)).reverse();\r\n\r\n    useEffect(() => {\r\n        if (checkedAll && props.filterInRange) {\r\n            props.setChosenItems(items.filter(item => item.props.id < props.dateHigher && item.props.id > props.dateLower).length ? items.filter(item => item.props.id < props.dateHigher && item.props.id > props.dateLower).map(item => item.props.id) : null);\r\n        } else if (checkedAll && !props.filterInRange) {\r\n            if (props.expenses.length && props.filter !== 'noFilter' && props.descending === 'Descending') {\r\n                props.setChosenItems([...expenses.filter((item: any) => item.category === props.filter).map((item: any) => item.id)]);\r\n            } else if (props.expenses.length && props.filter !== 'noFilter' && props.descending !== 'Descending') {\r\n                props.setChosenItems([...expenses.sort(defineSort()).filter((item: any) => item.category === props.filter).map((item: any) => item.id).reverse()]);\r\n            } else if (props.descending === 'Descending') {\r\n                props.setChosenItems([...expenses.map((item: any) => item.id)]);\r\n            } else {\r\n                props.setChosenItems([...expenses.map((item: any) => item.id).reverse()]);\r\n            }\r\n        } else {\r\n            props.setChosenItems([]);\r\n        }\r\n    }, [checkedAll, props.filterInRange]);\r\n\r\n    const chooseAllItems = useCallback(() => {\r\n        setCheckedAll(!checkedAll);\r\n    }, [checkedAll]);\r\n\r\n    return (\r\n        <div className={'table'}>\r\n            <TableHeader checkedAll={checkedAll} chooseAllItems={chooseAllItems}/>\r\n\r\n            {props.filterInRange ? items.filter(item => item.props.id < props.dateHigher && item.props.id > props.dateLower).length\r\n                ? items.filter(item => item.props.id < props.dateHigher && item.props.id > props.dateLower) :\r\n                <div className={'empty'}>You don't have any data for this period</div> : items}\r\n            {props.expenses.length === 0 ? <div className={'empty'}>Add your first spent</div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default HistoryItems;","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addExpense, changeExpense, deleteExpense, getExpenses, setExpenses} from \"../../redux/history-reducer\";\r\nimport Form from \"./Form/Form\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport HistoryItems from \"./HistoryItems/HistoryItems\";\r\nimport add from './../../assets/images/add.svg';\r\nimport Button from \"../Button/Button\";\r\nimport del from './../../assets/images/delete.svg';\r\nimport Confirm from \"../Confirm/Confirm\";\r\n\r\nconst History: React.FC = (props: any) => {\r\n    const [filter, setFilter] = useState('noFilter');\r\n    const [sort, setSort] = useState('By Date');\r\n    const sortValues = ['By Date', 'By Spent', 'By Categories', 'By Name', 'By Count'];\r\n    const [descending, setDescending] = useState('Descending');\r\n    const [dateLower, setDateLower] = useState(new Date().setHours(0));\r\n    const [dateHigher, setDateHigher] = useState(new Date().setDate(new Date().getDate() + 1));\r\n    const [filterInRange, setFilterInRange] = useState(false);\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [chosenItems, setChosenItems] = useState([]);\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n    const onChangeDateLower = (date: any) => {\r\n        setDateLower(date);\r\n    };\r\n\r\n    const onChangeDateHigher = (date: any) => {\r\n        setDateHigher(date);\r\n    };\r\n\r\n    const onDeleteExpense = () => {\r\n        props.deleteExpense(chosenItems);\r\n        props.setExpenses();\r\n        setChosenItems([]);\r\n        setShowConfirm(false);\r\n    };\r\n\r\n    const onShowConfirm = () => {\r\n        if (chosenItems.length) {\r\n            setShowConfirm(true)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'history'}>\r\n            <h2>Your history</h2>\r\n\r\n            {showConfirm ? <Confirm title={`Do you want delete ${chosenItems.length} items?`} func={onDeleteExpense} close={() => setShowConfirm(false)}/> : null}\r\n\r\n            <div className={'history__buttons'}>\r\n                <Button image={add} func={() => setShowForm(!showForm)} className={'button button--add'}\r\n                        title={'Add new'}/>\r\n                <Button image={del} func={onShowConfirm} className={'button button--delete'} title={`Delete items (${chosenItems.length})`}/>\r\n            </div>\r\n\r\n            <Form showForm={showForm}/>\r\n            <Filter categories={props.categories} descending={descending} setDescending={setDescending} filter={filter}\r\n                    setFilter={setFilter} sort={sort} setSort={setSort} sortValues={sortValues} dateLower={dateLower}\r\n                    dateHigher={dateHigher} onChangeDateLower={onChangeDateLower}\r\n                    onChangeDateHigher={onChangeDateHigher} filterInRange={filterInRange}\r\n                    setFilterInRange={setFilterInRange}/>\r\n\r\n            <HistoryItems chosenItems={chosenItems} setChosenItems={setChosenItems} categories={props.categories}\r\n                          filter={filter} sort={sort} descending={descending} expenses={props.expenses}\r\n                          deleteExpense={props.deleteExpense} changeExpense={props.changeExpense}\r\n                          setExpenses={props.setExpenses} dateLower={dateLower} dateHigher={dateHigher}\r\n                          filterInRange={filterInRange}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (store: any) => ({\r\n    expenses: store.history.expenses,\r\n    categories: store.settings.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {addExpense, setExpenses, getExpenses, changeExpense, deleteExpense})(History);","import React, {useState} from \"react\";\r\nimport Confirm from \"../../../Confirm/Confirm\";\r\nimport './category.scss'\r\nimport clear from \"../../../../assets/images/clear-dark.svg\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    id: any,\r\n\r\n    setCategories(): void,\r\n\r\n    deleteCategory(id: string): void,\r\n}\r\n\r\nconst Category: React.FC<Props> = (props) => {\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n    const onDeleteCategory = () => {\r\n        props.deleteCategory(props.id);\r\n        props.setCategories();\r\n    };\r\n    const onCloseConfirmWindow = () => {\r\n        setShowConfirm(false);\r\n    };\r\n    const onButtonClick = () => {\r\n        setShowConfirm(true)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConfirm ?\r\n                <Confirm title={'Are you sure?'} func={onDeleteCategory} close={onCloseConfirmWindow}/> : null}\r\n            <div key={props.name} className={'category'}>\r\n                <p>{props.name}</p>\r\n                <button className={'button'} onClick={onButtonClick}>\r\n                    <img src={clear} alt=\"\"/>\r\n                </button>\r\n                {/*<Button image={del} func={onButtonClick} className={'button button--delete'} title={'Delete'}/>*/}\r\n                {/*<button onClick={onButtonClick}>Delete</button>*/}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Category;","import React, {useEffect, useState} from \"react\";\r\nimport Category from \"./Category/Category\";\r\nimport addDark from \"../../../assets/images/add-dark.svg\";\r\nimport './categories.scss';\r\n\r\ninterface Props {\r\n    categories: any,\r\n\r\n    setCategories(): void,\r\n\r\n    getCategories(): void,\r\n\r\n    addCategory(category: string): void,\r\n\r\n    deleteCategory(id: string): void,\r\n}\r\n\r\nconst Categories: React.FC<Props> = (props) => {\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        props.getCategories();\r\n    }, []);\r\n\r\n    const onAddCategory = () => {\r\n        if (!newCategory) {\r\n            setError(true);\r\n        } else {\r\n            props.addCategory(newCategory);\r\n            props.setCategories();\r\n            setNewCategory('');\r\n        }\r\n    };\r\n    const onCategoryTyping = (e: any) => {\r\n        setNewCategory(e.currentTarget.value);\r\n        if (error) {\r\n            setError(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'settings__item categories'}>\r\n            <h3>Categories</h3>\r\n            <div className={'categories__form'}>\r\n                <input className={error ? 'category-name category-name--error' : 'category-name'} type=\"text\"\r\n                       value={newCategory} onBlur={() => setError(false)} onChange={onCategoryTyping}/>\r\n                <button className={'button'} onClick={onAddCategory}>\r\n                    <img src={addDark} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n\r\n            {props.categories.map((item: any) => <Category key={item.id} name={item.name} id={item.id}\r\n                                                           setCategories={props.setCategories}\r\n                                                           deleteCategory={props.deleteCategory}/>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Categories;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCategory, deleteCategory, getCategories, setCategories} from \"../../redux/settings-reducer\";\r\nimport Categories from \"./Categories/Categories\";\r\n\r\ninterface Props {\r\n    categories: any,\r\n\r\n    addCategory(name: string): void,\r\n\r\n    getCategories(): void,\r\n\r\n    setCategories(): void,\r\n\r\n    deleteCategory(id: string): void,\r\n}\r\n\r\nconst Settings: React.FC<Props> = (props) => {\r\n    return (\r\n        <div className={'settings'}>\r\n            <h2>Settings</h2>\r\n            <Categories categories={props.categories} setCategories={props.setCategories}\r\n                        getCategories={props.getCategories} addCategory={props.addCategory}\r\n                        deleteCategory={props.deleteCategory}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    categories: store.settings.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {addCategory, getCategories, setCategories, deleteCategory})(Settings);","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Button from \"../../Button/Button\";\r\nimport search from \"../../../assets/images/search.svg\";\r\nimport clear from \"../../../assets/images/clear.svg\";\r\n\r\ninterface Props {\r\n    dateHigher: any,\r\n    dateLower: any,\r\n    showForPeriod: boolean,\r\n\r\n    setDateLower(date: any): void,\r\n\r\n    setDateHigher(date: any): void,\r\n\r\n    setShowForPeriod(show: boolean): void,\r\n}\r\n\r\nconst Period: React.FC<Props> = (props) => {\r\n    const onChangeDateLower = (date: any) => {\r\n        props.setDateLower(date);\r\n    };\r\n    const onChangeDateHigher = (date: any) => {\r\n        props.setDateHigher(date);\r\n    };\r\n\r\n    return (\r\n        <div className={'period'}>\r\n\r\n            <DatePicker maxDate={props.dateHigher} onChange={onChangeDateLower} selected={props.dateLower}/>\r\n            <DatePicker minDate={props.dateLower} disabled={props.dateLower > props.dateHigher}\r\n                        onChange={onChangeDateHigher} selected={props.dateHigher}/>\r\n            <div className={'buttons'}>\r\n                <Button image={search} func={() => props.setShowForPeriod(true)} className={'button button--search'}\r\n                        title={'Set'} disabled={props.dateLower > props.dateHigher}/>\r\n                <Button image={clear} func={() => props.setShowForPeriod(false)} className={'button button--clear'}\r\n                        title={'Clear'} disabled={props.dateLower > props.dateHigher}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Period;","import React from \"react\";\r\n\r\ninterface Props {\r\n    dateLower: any,\r\n    dateHigher: any,\r\n    categories: Array<any>,\r\n    title: string,\r\n    showExpensesPerDay: boolean,\r\n    showMoreInfo: boolean,\r\n    moreInfo: any\r\n\r\n    findTotalSpending(): number,\r\n\r\n    findSpentCategory(): any,\r\n\r\n    findBiggerSpent(): any\r\n}\r\n\r\nconst AnalyticsInfo: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className={'analytics__wrapper'}>\r\n            <h3>{props.title}</h3>\r\n\r\n            <div className={'analytics__info'}>\r\n                <div className={'analytics__info__item'}>\r\n                    <h3>Total spent:</h3>\r\n                    {props.findTotalSpending()}\r\n                </div>\r\n                <div className={'analytics__info__item'}>\r\n                    <h3>Most spent for:</h3>\r\n                    {props.findBiggerSpent()}\r\n                </div>\r\n                <div className={'analytics__info__item'}>\r\n                    <h3>Spending by categories:</h3>\r\n                    <div className={'analytics__categories'}>\r\n                        {props.findSpentCategory()}\r\n                    </div>\r\n                </div>\r\n\r\n                {props.showMoreInfo ? <div className={'analytics__info__item detail-info'}>\r\n                    <div className={'header'}>\r\n                        <p>Name</p>\r\n                        <p>Category</p>\r\n                        <p>Price</p>\r\n                        <p>Count</p>\r\n                        <p>Spent</p>\r\n                        <p>Date</p>\r\n                    </div>\r\n\r\n                    {props.moreInfo.map((item: any) =>\r\n                        <div key={item.id} className={'more-info'}>\r\n                            <p>{item.name}</p>\r\n                            <p>{item.category}</p>\r\n                            <p>{item.price}</p>\r\n                            <p>{item.count}</p>\r\n                            <p>{item.spent}</p>\r\n                            <p>{item.date}</p>\r\n                        </div>)}\r\n                </div> : null}\r\n\r\n                {props.showExpensesPerDay ? <div className={'analytics__info__item'}>\r\n                    <h3>Spending per day:</h3>\r\n                    {props.findTotalSpending() / Math.ceil((props.dateHigher - props.dateLower) / 86400000)}\r\n                </div> : null}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default AnalyticsInfo;","import React from \"react\";\r\n\r\ninterface Props {\r\n    spent: any,\r\n    category: any,\r\n    sum: any,\r\n    func(): void\r\n}\r\n\r\nconst Chart: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n            <div>\r\n                <p>{props.spent}</p>\r\n                <div onClick={props.func} style={{\r\n                    width: '1.5rem',\r\n                    height: `${props.spent / props.sum * 150}px`,\r\n                    backgroundColor: `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`\r\n                }}\r\n                     className={'column'}/>\r\n                <h5>{props.category}</h5>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Chart;","import React, {useEffect, useState} from \"react\";\r\nimport './analytics.scss';\r\nimport {connect} from \"react-redux\";\r\nimport Period from \"./Period/Period\";\r\nimport {getExpenses} from \"../../redux/history-reducer\";\r\nimport AnalyticsInfo from \"./AnalyticsInfo/AnalyticsInfo\";\r\nimport {getCategories} from \"../../redux/settings-reducer\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst Analytics = (props: any) => {\r\n    const [dateLower, setDateLower] = useState(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0));\r\n    const [dateHigher, setDateHigher] = useState(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1, 0, 0, 0));\r\n    const [showForPeriod, setShowForPeriod] = useState(false);\r\n    const [showMoreInfo, setShowMoreInfo] = useState(false);\r\n    const [moreInfo, setMoreInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        props.getExpenses();\r\n        props.getCategories();\r\n    }, []);\r\n\r\n    const findTotalSpendingForPeriod = () => {\r\n        return [...props.expenses].filter((item: any) => item.id > dateLower && item.id < dateHigher).reduce((sum: any, item: any) => sum + item.spent, 0)\r\n    };\r\n    const findTotalSpending = () => {\r\n        return [...props.expenses].reduce((sum: any, item: any) => sum + item.spent, 0);\r\n    };\r\n    const findSpentCategory = () => {\r\n        let categories: Array<any> = [];\r\n\r\n        props.categories.forEach((category: any) => categories.push({\r\n            category: category.name,\r\n            spent: [...props.expenses].filter((item: any) => item.category === category.name).reduce((sum: any, elem: any) => sum + elem.spent, 0),\r\n            expenses: [...props.expenses].filter((item: any) => item.category === category.name),\r\n        }));\r\n\r\n        let sum = categories.reduce((sum, item) => sum + item.spent, 0);\r\n\r\n        return categories.filter(item => item.spent !== 0).sort((a, b) => a.spent - b.spent).map(item =>\r\n            <Chart func={() => {\r\n                setShowMoreInfo(true);\r\n                setMoreInfo(item.expenses);\r\n            }} key={item.category} spent={item.spent} category={item.category} sum={sum}/>);\r\n    };\r\n    const findSpentCategoryForPeriod = () => {\r\n        let categories: Array<any> = [];\r\n\r\n        props.categories.forEach((category: any) => categories.push({\r\n            category: category.name,\r\n            spent: [...props.expenses].filter((item: any) => item.id > dateLower && item.id < dateHigher && item.category === category.name).reduce((sum: any, elem: any) => sum + elem.spent, 0),\r\n            expenses: [...props.expenses].filter((item: any) => item.id > dateLower && item.id < dateHigher && item.category === category.name)\r\n        }));\r\n\r\n        let sum = categories.reduce((sum, item) => sum + item.spent, 0);\r\n\r\n        return categories.filter(item => item.spent !== 0).sort((a, b) => a.spent - b.spent).map(item =>\r\n            <Chart func={() => {\r\n                setShowMoreInfo(true);\r\n                setMoreInfo(item.expenses);\r\n            }} key={item.category} spent={item.spent}\r\n                   category={item.category} sum={sum}/>);\r\n    };\r\n    const findBiggerSpentForPeriod = () => {\r\n        return [...props.expenses].filter((item: any) => item.id >= dateLower && item.id <= dateHigher && item.spent === Math.max(...props.expenses.filter((item: any) => item.id >= dateLower && item.id <= dateHigher).map((item: any) => item.spent))).map((item: any) =>\r\n            <div className={'biggest-spending'} key={item.id}>\r\n                <p>Name:</p>\r\n                <span>{item.name}</span>\r\n                <p>Spent:</p>\r\n                <span>{item.spent}</span>\r\n                <p>Category:</p>\r\n                <span>{item.category}</span>\r\n                <p>Date:</p>\r\n                <span>{item.date}</span>\r\n                <p>Count:</p>\r\n                <span>{item.count}</span>\r\n            </div>)\r\n    };\r\n    const findBiggerSpent = () => {\r\n        return [...props.expenses].filter((item: any) => item.spent === Math.max(...props.expenses.map((item: any) => item.spent))).map((item: any) =>\r\n            <div className={'biggest-spending'} key={item.id}>\r\n                <p>Name:</p>\r\n                <span>{item.name}</span>\r\n                <p>Spent:</p>\r\n                <span>{item.spent}</span>\r\n                <p>Category:</p>\r\n                <span>{item.category}</span>\r\n                <p>Date:</p>\r\n                <span>{item.date}</span>\r\n                <p>Count:</p>\r\n                <span>{item.count}</span>\r\n            </div>)\r\n    };\r\n\r\n    return (\r\n        <div className={'analytics'}>\r\n            <h2>Analytics</h2>\r\n            <Period dateHigher={dateHigher} dateLower={dateLower} setDateLower={setDateLower}\r\n                    setDateHigher={setDateHigher} showForPeriod={showForPeriod} setShowForPeriod={setShowForPeriod}/>\r\n\r\n            {showForPeriod ?\r\n                <AnalyticsInfo moreInfo={moreInfo} showMoreInfo={showMoreInfo} showExpensesPerDay={true}\r\n                               dateLower={dateLower} dateHigher={dateHigher}\r\n                               categories={props.categories} title={'Analytics for the time period'}\r\n                               findTotalSpending={findTotalSpendingForPeriod}\r\n                               findSpentCategory={findSpentCategoryForPeriod}\r\n                               findBiggerSpent={findBiggerSpentForPeriod}/>\r\n                :\r\n                <AnalyticsInfo moreInfo={moreInfo} showMoreInfo={showMoreInfo} showExpensesPerDay={false}\r\n                               dateLower={dateLower} dateHigher={dateHigher}\r\n                               categories={props.categories} title={'Summary analytics'}\r\n                               findTotalSpending={findTotalSpending} findSpentCategory={findSpentCategory}\r\n                               findBiggerSpent={findBiggerSpent}/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    expenses: store.history.expenses,\r\n    categories: store.settings.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getExpenses, getCategories})(Analytics);","import React from 'react';\nimport './assets/styles/styles.scss';\nimport Menu from \"./components/Menu/Menu\";\nimport History from \"./components/History/History\";\nimport Settings from \"./components/Settings/Settings\";\nimport Analytics from \"./components/Analytics/Analytics\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <div className={'wrapper'}>\n                <Menu/>\n                <div className={'content'}>\n                    <Switch>\n                        <Route path={'/history'}>\n                            <History/>\n                        </Route>\n                        <Route path={'/settings'}>\n                            <Settings/>\n                        </Route>\n                        <Route path={'/analytics'}>\n                            <Analytics/>\n                        </Route>\n                        <Redirect to={'/history'} />\n                    </Switch>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState: any = {};\r\n\r\nconst analyticsReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default analyticsReducer;","let initialState: any = {};\r\n\r\nconst accountReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default accountReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport analyticsReducer from \"./analytics-reducer\";\r\nimport accountReducer from \"./account-reducer\";\r\nimport historyReducer from \"./history-reducer\";\r\nimport settingsReducer from \"./settings-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    account: accountReducer,\r\n    analytics: analyticsReducer,\r\n    history: historyReducer,\r\n    settings: settingsReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/separator.13ff7084.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.33e01ffd.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.234c234c.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.57f77dce.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.2ec496af.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics.0e0ff751.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.a4fe81f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.b79003c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.671c5d46.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.fa5e6b6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-dark.1df4a4af.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-dark.58e58a78.svg\";"],"sourceRoot":""}